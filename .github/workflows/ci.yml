name: Build, Test, and Validate Coverage

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore TodoManager.sln

      - name: Build
        run: dotnet build TodoManager.sln --configuration Release --no-restore

      - name: Run tests with coverage
        run: |
          dotnet test tests/TodoManager.Domain.Tests/TodoManager.Domain.Tests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage" --verbosity normal
          echo "Test Results:"
          ls -R tests/TodoManager.Domain.Tests/TestResults # Verifique se o diretório TestResults está presente

      - name: Check Coverage Threshold
        run: |
          # Extrai a taxa de cobertura e garante que apenas a primeira linha é usada
          COVERAGE=$(grep -oP '(?<=line-rate=")[^"]+' tests/TodoManager.Domain.Tests/TestResults/*/coverage.cobertura.xml | head -n 1)
          
          # Remove o ponto e converte para um número de ponto flutuante
          COVERAGE=$(echo "$COVERAGE" | tr -d '\n')
          
          # Defina sua porcentagem mínima de cobertura para 85%
          THRESHOLD=0.85 

          # Verifica se a cobertura é menor que o limite
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "Coverage $COVERAGE is below threshold $THRESHOLD"
            exit 1
          fi
        shell: bash
